name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
      - uses: friendlyanon/setup-vcpkg@v1 # needs to be after checkout or else it's deleted
        with: 
          committish: db0473513e5dc73ec6b6f431ff05d2f398eea042
      - if: matrix.os == 'windows-latest' # Because windows is still x86 by default 
        shell: bash # access regardless of the host operating system
        run: $VCPKG_ROOT/vcpkg install eigen3 gtest --triplet=x64-windows
      - if: matrix.os != 'windows-latest'
        run: $VCPKG_ROOT/vcpkg install eigen3 gtest
        
      - run: cmake -E make_directory ${{ github.workspace }}/build

      - name: configure
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake

      - name: build
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: cmake --build .

      - name: test
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: ctest . --build-config Debug --rerun-failed --output-on-failure

  install:
    runs-on: ${{ matrix.os }}
    env:
      CMAKE_BUILD_TYPE: Release
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
      - uses: friendlyanon/setup-vcpkg@v1 # needs to be after checkout or else it's deleted
        with: 
          committish: db0473513e5dc73ec6b6f431ff05d2f398eea042
      - if: matrix.os == 'windows-latest' # Because windows is still x86 by default 
        shell: bash # access regardless of the host operating system
        run: $VCPKG_ROOT/vcpkg install eigen3 gtest --triplet=x64-windows
      - if: matrix.os != 'windows-latest'
        run: $VCPKG_ROOT/vcpkg install eigen3 gtest
        
      - run: cmake -E make_directory ${{ github.workspace }}/build

      - if: matrix.os != 'windows-latest'
        name: setup
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake -DBUILD_TESTING=OFF
          cmake --build .
          sudo cmake --install .

        # No sudo and it's multi config
      - if: matrix.os == 'windows-latest'
        name: setup
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake -DBUILD_TESTING=OFF
          cmake --build . --config Release
          cmake --install . --config Release

      - name: examples
        shell: bash
        working-directory: ${{ github.workspace }}/examples
        run: |
          cmake . --debug-find -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake
          cmake --build . --config Release
